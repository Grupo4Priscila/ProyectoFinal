// Buildtime
// anio week day hour min ss
def BUILD_DATE_TIME = new Date().format("yywwuHHmm").toInteger()
logger.lifecycle("Using Buildtime: ${BUILD_DATE_TIME}")

// Version name
// abcedario
def VERSION_NAME = "a"

apply plugin: 'com.android.application'

// Version Dbflow
def dbflow_version = "4.1.2"

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.1"
    defaultConfig {
        applicationId "cl.ucn.disc.dam.autolog"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode BUILD_DATE_TIME
        versionName "${VERSION_NAME} ${BUILD_DATE_TIME}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            postprocessing {
                crunchPngs true
                removeUnusedCode true
                removeUnusedResources true
                obfuscate true
                optimizeCode true
                zipAlignEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
            versionNameSuffix "-release"
        }
        debug {
            postprocessing {
                crunchPngs false
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                zipAlignEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
            versionNameSuffix "-debug"
        }
    }
}

// File output name
android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "dnews-${variant.versionCode}-${variant.name}.apk"
    }
}


dependencies {

    // Simple Logging Facade 4 Java
    implementation 'org.slf4j:slf4j-api:1.7.25'

    compile 'com.android.support:support-v4:26.+'
    compile 'com.android.support:design:26.+'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    testAnnotationProcessor 'org.projectlombok:lombok:1.16.18'
    testImplementation 'org.projectlombok:lombok:1.16.18'

    // Lombok Android
    annotationProcessor 'org.projectlombok:lombok:1.16.18'
    compileOnly 'org.projectlombok:lombok:1.16.18'
    compile 'org.glassfish:javax.annotation:10.0-b28'

    //Dbflow
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"

    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    testAnnotationProcessor 'org.projectlombok:lombok:1.16.18'
    testImplementation 'org.projectlombok:lombok:1.16.18'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    // Simple Logging Facade 4 Java
    implementation 'org.slf4j:slf4j-api:1.7.25'

    // Logback Android Core Module
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }

    // Logger de Orhan Obut
    implementation 'com.orhanobut:logger:2.1.1'

}
